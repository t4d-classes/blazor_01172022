@page "/color-tool"

@using ToolsApp.Models.Colors
@using ToolsApp.Components.ColorTool
@using ToolsApp.Services.Colors
@using ToolsApp.Models.Shared

@inject ColorToolStoreService colorToolStore
@inject IJSRuntime JS

<ToolHeader HeaderText="@_headerText" />

<ColorList Colors="@_colors" OnDeleteColor="RemoveColor" />

<ColorForm ButtonText="Add Color" OnSubmitColor="AppendColor"
	DefaultControl="defaultControl" OnDefaultControlChanged="setDefaultControl"/>

@code {

	private ElementReference defaultControl { get; set; }

	private HeaderInfo _headerText = new HeaderInfo()
		{
			HeaderText = "Color Tool",
			SubHeaderText = "The best way to manage colors!",
		};


	// private IEnumerable<Color> _colors => colorToolStore.Colors;
	private IEnumerable<Color> _colors {
		get {
			return colorToolStore.Colors;
		}
	}

	private void AppendColor(NewColor color)
	{
		colorToolStore.AddColor(color);
	}

	private void RemoveColor(int colorId)
	{
		colorToolStore.DeleteColor(colorId);
	}

	private async Task setDefaultControl(ElementReference control)
	{
		defaultControl = control;
		await JS.InvokeVoidAsync("toolsAppDemo.setFocus", defaultControl);
	}

	

}
