@using ToolsApp.Models.Colors

<form>
	<label>
		Color Name:
    <input type="text" @bind="@colorForm.ColorName" @ref="defaultControl" />
	</label>
	<label>
		Color Hexcode:
    <input type="text" @bind="@colorForm.ColorHexcode" />
	</label>
  <button type="button" @onclick="submitColor">@ButtonText</button>
</form>

@code {

	[Parameter]
	public string ButtonText { get; set; } = "Submit Color";

	[Parameter]
	public EventCallback<NewColor> OnSubmitColor { get; set; }

  [Parameter]
  public ElementReference DefaultControl { get; set; }

  [Parameter]
  public EventCallback<ElementReference> OnDefaultControlChanged { get; set; }

  private ElementReference defaultControl { get; set; }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (firstRender)
    {
      DefaultControl = defaultControl;
      await OnDefaultControlChanged.InvokeAsync(DefaultControl);
    }
  }

	private ColorFormModel colorForm = new();

	private async void submitColor() {
		await OnSubmitColor.InvokeAsync(
			new(colorForm.ColorName, colorForm.ColorHexcode));

		colorForm = new();
	}

	class ColorFormModel
	{
		public string ColorName { get; set; } = "";
		public string ColorHexcode { get; set; } = "";
	}

}
